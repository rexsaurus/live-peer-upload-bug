import * as components from "../models/components";
import * as operations from "../models/operations";
import { SDKConfiguration } from "./sdk";
import { AxiosRequestConfig } from "axios";
export declare class Stream {
    private sdkConfiguration;
    constructor(sdkConfig: SDKConfiguration);
    /**
     * Retrieve streams
     */
    getAll(streamsonly?: string, config?: AxiosRequestConfig): Promise<operations.GetStreamsResponse>;
    /**
     * Create a stream
     */
    create(req: components.NewStreamPayload, config?: AxiosRequestConfig): Promise<operations.CreateStreamResponse>;
    /**
     * Delete a stream
     */
    delete(id: string, config?: AxiosRequestConfig): Promise<operations.DeleteStreamResponse>;
    /**
     * Retrieve a stream
     */
    get(id: string, config?: AxiosRequestConfig): Promise<operations.GetStreamResponse>;
    /**
     * Update a stream
     */
    update(id: string, streamPatchPayload: components.StreamPatchPayload, config?: AxiosRequestConfig): Promise<operations.UpdateStreamResponse>;
    /**
     * Create a clip
     *
     * @remarks
     * Create a clip from a livestream
     *
     */
    createClip(req: components.ClipPayload, config?: AxiosRequestConfig): Promise<operations.PostClipResponse>;
    /**
     * Retrieve clips of a livestream
     */
    getAllClips(id: string, config?: AxiosRequestConfig): Promise<operations.GetStreamIdClipsResponse>;
}
