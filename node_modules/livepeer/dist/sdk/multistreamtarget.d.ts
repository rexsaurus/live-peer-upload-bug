import * as components from "../models/components";
import * as operations from "../models/operations";
import { SDKConfiguration } from "./sdk";
import { AxiosRequestConfig } from "axios";
export declare class MultistreamTarget {
    private sdkConfiguration;
    constructor(sdkConfig: SDKConfiguration);
    /**
     * Retrieve Multistream Targets
     */
    getAll(config?: AxiosRequestConfig): Promise<operations.GetMultistreamTargetsResponse>;
    /**
     * Create a multistream target
     */
    create(req: components.MultistreamTargetInput, config?: AxiosRequestConfig): Promise<operations.CreateMultistreamTargetResponse>;
    /**
     * Delete a multistream target
     */
    delete(id: string, config?: AxiosRequestConfig): Promise<operations.DeleteMultistreamTargetResponse>;
    /**
     * Retrieve a multistream target
     */
    get(id: string, config?: AxiosRequestConfig): Promise<operations.GetMultistreamTargetResponse>;
    /**
     * Update Multistream Target
     */
    update(id: string, multistreamTargetPatchPayload: components.MultistreamTargetPatchPayload, config?: AxiosRequestConfig): Promise<operations.UpdateMultistreamTargetResponse>;
}
