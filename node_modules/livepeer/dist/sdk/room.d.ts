import * as components from "../models/components";
import * as operations from "../models/operations";
import { SDKConfiguration } from "./sdk";
import { AxiosRequestConfig } from "axios";
export declare class Room {
    private sdkConfiguration;
    constructor(sdkConfig: SDKConfiguration);
    /**
     * Create a room
     */
    createRoom(config?: AxiosRequestConfig): Promise<operations.CreateRoomResponse>;
    /**
     * Delete a room
     */
    deleteRoom(id: string, config?: AxiosRequestConfig): Promise<operations.DeleteRoomResponse>;
    /**
     * Retrieve a room
     */
    getRoom(id: string, config?: AxiosRequestConfig): Promise<operations.GetRoomResponse>;
    /**
     * Stop room RTMP egress
     */
    stopRoomEgress(id: string, config?: AxiosRequestConfig): Promise<operations.StopRoomEgressResponse>;
    /**
     * Start room RTMP egress
     */
    startRoomEgress(id: string, roomEgressPayload: components.RoomEgressPayload, config?: AxiosRequestConfig): Promise<operations.StartRoomEgressResponse>;
    /**
     * Create a room user
     */
    createRoomUser(id: string, roomUserPayload: components.RoomUserPayload, config?: AxiosRequestConfig): Promise<operations.CreateRoomUserResponse>;
    /**
     * Remove a user from the room
     */
    deleteRoomUser(id: string, userId: string, config?: AxiosRequestConfig): Promise<operations.DeleteRoomUserResponse>;
    /**
     * Get user details
     */
    getRoomUserDetails(id: string, userId: string, config?: AxiosRequestConfig): Promise<operations.GetRoomUserDetailsResponse>;
    /**
     * Update a room user
     */
    updateRoomUserDetails(id: string, userId: string, roomUserUpdatePayload: components.RoomUserUpdatePayload, config?: AxiosRequestConfig): Promise<operations.UpdateRoomUserDetailsResponse>;
}
