import { SpeakeasyBase } from "../../internal/utils";
import { AxiosResponse } from "axios";
export declare class GetPublicTotalViewsMetricsRequest extends SpeakeasyBase {
    /**
     * The playback ID to filter the query results. This can be a canonical
     *
     * @remarks
     * playback ID from Livepeer assets or streams, or dStorage identifiers
     * for assets
     *
     */
    playbackId: string;
}
/**
 * A simplified metric object about aggregate viewership of an
 *
 * @remarks
 * asset. Either playbackId or dStorageUrl will be set.
 *
 */
export declare class GetPublicTotalViewsMetricsData extends SpeakeasyBase {
    /**
     * The playback ID associated with the metric
     */
    playbackId?: string;
    /**
     * The URL of the distributed storage used for the asset
     */
    dStorageUrl?: string;
    /**
     * The number of views for the asset
     */
    viewCount: number;
    /**
     * The total playtime in minutes for the asset
     */
    playtimeMins: number;
}
export declare class GetPublicTotalViewsMetricsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse?: AxiosResponse;
    /**
     * A single Metric object with the viewCount and playtimeMins metrics.
     */
    data?: GetPublicTotalViewsMetricsData;
}
