import { SpeakeasyBase } from "../../internal/utils";
import { Attestation } from "./attestation";
import { PlaybackPolicy } from "./playbackpolicy";
export declare enum PlaybackInfoType {
    Live = "live",
    Vod = "vod",
    Recording = "recording"
}
export declare enum Hrn {
    HlsTs = "HLS (TS)",
    Mp4 = "MP4",
    WebRTCH264 = "WebRTC (H264)"
}
export declare enum PlaybackInfoSchemasType {
    Html5ApplicationVndAppleMpegurl = "html5/application/vnd.apple.mpegurl",
    Html5VideoMp4 = "html5/video/mp4",
    Html5VideoH264 = "html5/video/h264"
}
export declare class Source extends SpeakeasyBase {
    hrn: Hrn;
    type: PlaybackInfoSchemasType;
    url: string;
    size?: number;
    width?: number;
    height?: number;
    bitrate?: number;
}
export declare class Meta extends SpeakeasyBase {
    live?: number;
    /**
     * Whether the playback policy for a asset or stream is public or signed
     */
    playbackPolicy?: PlaybackPolicy;
    source: Source[];
    attestation?: Attestation;
}
export declare class PlaybackInfo extends SpeakeasyBase {
    type: PlaybackInfoType;
    meta: Meta;
}
