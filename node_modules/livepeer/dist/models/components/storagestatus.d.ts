import { SpeakeasyBase } from "../../internal/utils";
/**
 * Phase of the asset storage
 */
export declare enum Phase {
    Waiting = "waiting",
    Processing = "processing",
    Ready = "ready",
    Failed = "failed",
    Reverted = "reverted"
}
export declare class Tasks extends SpeakeasyBase {
    /**
     * ID of any currently running task that is exporting this
     *
     * @remarks
     * asset to IPFS.
     *
     */
    pending?: string;
    /**
     * ID of the last task to run successfully, that created
     *
     * @remarks
     * the currently saved data.
     *
     */
    last?: string;
    /**
     * ID of the last task to fail execution.
     */
    failed?: string;
}
export declare class StorageStatus extends SpeakeasyBase {
    /**
     * Phase of the asset storage
     */
    phase: Phase;
    /**
     * Current progress of the task updating the storage.
     */
    progress?: number;
    /**
     * Error message if the last storage changed failed.
     */
    errorMessage?: string;
    tasks: Tasks;
}
