import { SpeakeasyBase } from "../../internal/utils";
import { StorageStatus } from "./storagestatus";
/**
 * Video Metadata EIP-712 primaryType
 */
export declare enum PrimaryType {
    VideoAttestation = "VideoAttestation"
}
export declare enum Name {
    VerifiableVideo = "Verifiable Video"
}
export declare enum Version {
    One = "1"
}
/**
 * Video Metadata EIP-712 domain
 */
export declare class Domain extends SpeakeasyBase {
    name: Name;
    version: Version;
}
export declare class Attestations extends SpeakeasyBase {
    role: string;
    address: string;
}
/**
 * Video Metadata EIP-712 message content
 */
export declare class Message extends SpeakeasyBase {
    video: string;
    attestations: Attestations[];
    signer: string;
    timestamp: number;
}
export declare enum SignatureType {
    Eip712 = "eip712",
    Flow = "flow"
}
export declare class AttestationIpfs extends SpeakeasyBase {
    /**
     * CID of the file on IPFS
     */
    cid?: string;
    /**
     * URL with IPFS scheme for the file
     */
    url?: string;
    /**
     * URL to access file via HTTP through an IPFS gateway
     */
    gatewayUrl?: string;
    /**
     * Timestamp (in milliseconds) at which IPFS export task was updated
     *
     * @remarks
     *
     */
    updatedAt?: number;
}
export declare class AttestationStorage extends SpeakeasyBase {
    ipfs?: AttestationIpfs;
    status?: StorageStatus;
}
export declare class Attestation extends SpeakeasyBase {
    id?: string;
    /**
     * Video Metadata EIP-712 primaryType
     */
    primaryType: PrimaryType;
    /**
     * Video Metadata EIP-712 domain
     */
    domain: Domain;
    /**
     * Video Metadata EIP-712 message content
     */
    message: Message;
    /**
     * Video Metadata EIP-712 message signature
     */
    signature: string;
    /**
     * Timestamp (in milliseconds) at which the object was created
     */
    createdAt?: number;
    signatureType?: SignatureType;
    storage?: AttestationStorage;
}
