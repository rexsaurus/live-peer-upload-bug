"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlaybackInfo = exports.Meta = exports.Source = exports.PlaybackInfoSchemasType = exports.Hrn = exports.PlaybackInfoType = void 0;
var utils_1 = require("../../internal/utils");
var attestation_1 = require("./attestation");
var playbackpolicy_1 = require("./playbackpolicy");
var class_transformer_1 = require("class-transformer");
var PlaybackInfoType;
(function (PlaybackInfoType) {
    PlaybackInfoType["Live"] = "live";
    PlaybackInfoType["Vod"] = "vod";
    PlaybackInfoType["Recording"] = "recording";
})(PlaybackInfoType = exports.PlaybackInfoType || (exports.PlaybackInfoType = {}));
var Hrn;
(function (Hrn) {
    Hrn["HlsTs"] = "HLS (TS)";
    Hrn["Mp4"] = "MP4";
    Hrn["WebRTCH264"] = "WebRTC (H264)";
})(Hrn = exports.Hrn || (exports.Hrn = {}));
var PlaybackInfoSchemasType;
(function (PlaybackInfoSchemasType) {
    PlaybackInfoSchemasType["Html5ApplicationVndAppleMpegurl"] = "html5/application/vnd.apple.mpegurl";
    PlaybackInfoSchemasType["Html5VideoMp4"] = "html5/video/mp4";
    PlaybackInfoSchemasType["Html5VideoH264"] = "html5/video/h264";
})(PlaybackInfoSchemasType = exports.PlaybackInfoSchemasType || (exports.PlaybackInfoSchemasType = {}));
var Source = /** @class */ (function (_super) {
    __extends(Source, _super);
    function Source() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hrn" }),
        __metadata("design:type", String)
    ], Source.prototype, "hrn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Source.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], Source.prototype, "url", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "size" }),
        __metadata("design:type", Number)
    ], Source.prototype, "size", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "width" }),
        __metadata("design:type", Number)
    ], Source.prototype, "width", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "height" }),
        __metadata("design:type", Number)
    ], Source.prototype, "height", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bitrate" }),
        __metadata("design:type", Number)
    ], Source.prototype, "bitrate", void 0);
    return Source;
}(utils_1.SpeakeasyBase));
exports.Source = Source;
var Meta = /** @class */ (function (_super) {
    __extends(Meta, _super);
    function Meta() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "live" }),
        __metadata("design:type", Number)
    ], Meta.prototype, "live", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "playbackPolicy" }),
        (0, class_transformer_1.Type)(function () { return playbackpolicy_1.PlaybackPolicy; }),
        __metadata("design:type", playbackpolicy_1.PlaybackPolicy)
    ], Meta.prototype, "playbackPolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Source }),
        (0, class_transformer_1.Expose)({ name: "source" }),
        (0, class_transformer_1.Type)(function () { return Source; }),
        __metadata("design:type", Array)
    ], Meta.prototype, "source", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "attestation" }),
        (0, class_transformer_1.Type)(function () { return attestation_1.Attestation; }),
        __metadata("design:type", attestation_1.Attestation)
    ], Meta.prototype, "attestation", void 0);
    return Meta;
}(utils_1.SpeakeasyBase));
exports.Meta = Meta;
var PlaybackInfo = /** @class */ (function (_super) {
    __extends(PlaybackInfo, _super);
    function PlaybackInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], PlaybackInfo.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "meta" }),
        (0, class_transformer_1.Type)(function () { return Meta; }),
        __metadata("design:type", Meta)
    ], PlaybackInfo.prototype, "meta", void 0);
    return PlaybackInfo;
}(utils_1.SpeakeasyBase));
exports.PlaybackInfo = PlaybackInfo;
