import { SpeakeasyBase } from "../../internal/utils";
import { PlaybackPolicy } from "./playbackpolicy";
export declare class NewAssetPayloadStorage extends SpeakeasyBase {
    /**
     * Set to true to make default export to IPFS. To customize the
     *
     * @remarks
     * pinned files, specify an object with a spec field. False or null
     * means to unpin from IPFS, but it's unsupported right now.
     *
     */
    ipfs?: any;
}
export declare class NewAssetPayloadEncryption extends SpeakeasyBase {
    /**
     * Encryption key used to encrypt the asset. Only writable in the upload asset endpoints and cannot be retrieved back.
     */
    encryptedKey: string;
}
export declare class NewAssetPayload extends SpeakeasyBase {
    /**
     * Name of the asset. This is not necessarily the filename, can be a
     *
     * @remarks
     * custom name or title
     *
     */
    name: string;
    /**
     * Whether to generate MP4s for the asset.
     */
    staticMp4?: boolean;
    /**
     * Whether the playback policy for a asset or stream is public or signed
     */
    playbackPolicy?: PlaybackPolicy;
    creatorId?: any;
    storage?: NewAssetPayloadStorage;
    /**
     * URL where the asset contents can be retrieved. Only allowed (and
     *
     * @remarks
     * also required) in the upload asset via URL endpoint.
     *
     */
    url?: string;
    encryption?: NewAssetPayloadEncryption;
}
